// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssigmaapi/markethub/v1/markethub.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ssigmaapi.Markethub.V1 {
  public static partial class MarketHubServiceV1
  {
    static readonly string __ServiceName = "ssigmaapi.markethub.v1.MarketHubServiceV1";

    static readonly grpc::Marshaller<global::Ssigmaapi.Markethub.V1.GetTradesRequest> __Marshaller_ssigmaapi_markethub_v1_GetTradesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ssigmaapi.Markethub.V1.GetTradesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ssigmaapi.Markethub.V1.GetTradesResponse> __Marshaller_ssigmaapi_markethub_v1_GetTradesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ssigmaapi.Markethub.V1.GetTradesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest> __Marshaller_ssigmaapi_markethub_v1_GetOrderBooksRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse> __Marshaller_ssigmaapi_markethub_v1_GetOrderBooksResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest> __Marshaller_ssigmaapi_markethub_v1_GetTradesAndOrderBooksRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse> __Marshaller_ssigmaapi_markethub_v1_GetTradesAndOrderBooksResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Ssigmaapi.Markethub.V1.GetTradesRequest, global::Ssigmaapi.Markethub.V1.GetTradesResponse> __Method_GetTrades = new grpc::Method<global::Ssigmaapi.Markethub.V1.GetTradesRequest, global::Ssigmaapi.Markethub.V1.GetTradesResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetTrades",
        __Marshaller_ssigmaapi_markethub_v1_GetTradesRequest,
        __Marshaller_ssigmaapi_markethub_v1_GetTradesResponse);

    static readonly grpc::Method<global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest, global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse> __Method_GetOrderBooks = new grpc::Method<global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest, global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetOrderBooks",
        __Marshaller_ssigmaapi_markethub_v1_GetOrderBooksRequest,
        __Marshaller_ssigmaapi_markethub_v1_GetOrderBooksResponse);

    static readonly grpc::Method<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest, global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse> __Method_GetTradesAndOrderBooks = new grpc::Method<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest, global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetTradesAndOrderBooks",
        __Marshaller_ssigmaapi_markethub_v1_GetTradesAndOrderBooksRequest,
        __Marshaller_ssigmaapi_markethub_v1_GetTradesAndOrderBooksResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ssigmaapi.Markethub.V1.MarkethubReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MarketHubServiceV1</summary>
    public abstract partial class MarketHubServiceV1Base
    {
      public virtual global::System.Threading.Tasks.Task GetTrades(global::Ssigmaapi.Markethub.V1.GetTradesRequest request, grpc::IServerStreamWriter<global::Ssigmaapi.Markethub.V1.GetTradesResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetOrderBooks(global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest request, grpc::IServerStreamWriter<global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetTradesAndOrderBooks(global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest request, grpc::IServerStreamWriter<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MarketHubServiceV1</summary>
    public partial class MarketHubServiceV1Client : grpc::ClientBase<MarketHubServiceV1Client>
    {
      /// <summary>Creates a new client for MarketHubServiceV1</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MarketHubServiceV1Client(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MarketHubServiceV1 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MarketHubServiceV1Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MarketHubServiceV1Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MarketHubServiceV1Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::Ssigmaapi.Markethub.V1.GetTradesResponse> GetTrades(global::Ssigmaapi.Markethub.V1.GetTradesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTrades(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Ssigmaapi.Markethub.V1.GetTradesResponse> GetTrades(global::Ssigmaapi.Markethub.V1.GetTradesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetTrades, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse> GetOrderBooks(global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrderBooks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Ssigmaapi.Markethub.V1.GetOrderBooksResponse> GetOrderBooks(global::Ssigmaapi.Markethub.V1.GetOrderBooksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetOrderBooks, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse> GetTradesAndOrderBooks(global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTradesAndOrderBooks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksResponse> GetTradesAndOrderBooks(global::Ssigmaapi.Markethub.V1.GetTradesAndOrderBooksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetTradesAndOrderBooks, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MarketHubServiceV1Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new MarketHubServiceV1Client(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MarketHubServiceV1Base serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetTrades, serviceImpl.GetTrades)
          .AddMethod(__Method_GetOrderBooks, serviceImpl.GetOrderBooks)
          .AddMethod(__Method_GetTradesAndOrderBooks, serviceImpl.GetTradesAndOrderBooks).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MarketHubServiceV1Base serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetTrades, serviceImpl.GetTrades);
      serviceBinder.AddMethod(__Method_GetOrderBooks, serviceImpl.GetOrderBooks);
      serviceBinder.AddMethod(__Method_GetTradesAndOrderBooks, serviceImpl.GetTradesAndOrderBooks);
    }

  }
}
#endregion
