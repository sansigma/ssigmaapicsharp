// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssigmaapi/type/orderbook.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ssigmaapi.Type {

  /// <summary>Holder for reflection information generated from ssigmaapi/type/orderbook.proto</summary>
  public static partial class OrderbookReflection {

    #region Descriptor
    /// <summary>File descriptor for ssigmaapi/type/orderbook.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderbookReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5zc2lnbWFhcGkvdHlwZS9vcmRlcmJvb2sucHJvdG8SDnNzaWdtYWFwaS50",
            "eXBlIicKBkJpZEFzaxINCgVwcmljZRgBIAEoARIOCgZhbW91bnQYAiABKAEi",
            "qQEKCU9yZGVyQm9vaxIQCghleGNoYW5nZRgBIAEoCRIMCgRiYXNlGAIgASgJ",
            "Eg0KBXF1b3RlGAMgASgJEg4KBnN5bWJvbBgEIAEoCRIkCgRiaWRzGAUgAygL",
            "MhYuc3NpZ21hYXBpLnR5cGUuQmlkQXNrEiQKBGFza3MYBiADKAsyFi5zc2ln",
            "bWFhcGkudHlwZS5CaWRBc2sSEQoJdGltZXN0YW1wGAcgASgDQjhaNmdpdGh1",
            "Yi5jb20va2FpdG8yL3NzaWdtYWFwaWdvL3R5cGUvb3JkZXJib29rO29yZGVy",
            "Ym9va2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssigmaapi.Type.BidAsk), global::Ssigmaapi.Type.BidAsk.Parser, new[]{ "Price", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssigmaapi.Type.OrderBook), global::Ssigmaapi.Type.OrderBook.Parser, new[]{ "Exchange", "Base", "Quote", "Symbol", "Bids", "Asks", "Timestamp" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BidAsk : pb::IMessage<BidAsk> {
    private static readonly pb::MessageParser<BidAsk> _parser = new pb::MessageParser<BidAsk>(() => new BidAsk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BidAsk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssigmaapi.Type.OrderbookReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidAsk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidAsk(BidAsk other) : this() {
      price_ = other.price_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidAsk Clone() {
      return new BidAsk(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 1;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private double amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BidAsk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BidAsk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Amount, other.Amount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (Amount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Amount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Price != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Price);
      }
      if (Amount != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BidAsk other) {
      if (other == null) {
        return;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Price = input.ReadDouble();
            break;
          }
          case 17: {
            Amount = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderBook : pb::IMessage<OrderBook> {
    private static readonly pb::MessageParser<OrderBook> _parser = new pb::MessageParser<OrderBook>(() => new OrderBook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssigmaapi.Type.OrderbookReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBook(OrderBook other) : this() {
      exchange_ = other.exchange_;
      base_ = other.base_;
      quote_ = other.quote_;
      symbol_ = other.symbol_;
      bids_ = other.bids_.Clone();
      asks_ = other.asks_.Clone();
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBook Clone() {
      return new OrderBook(this);
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 1;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 2;
    private string base_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Base {
      get { return base_; }
      set {
        base_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quote" field.</summary>
    public const int QuoteFieldNumber = 3;
    private string quote_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Quote {
      get { return quote_; }
      set {
        quote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Ssigmaapi.Type.BidAsk> _repeated_bids_codec
        = pb::FieldCodec.ForMessage(42, global::Ssigmaapi.Type.BidAsk.Parser);
    private readonly pbc::RepeatedField<global::Ssigmaapi.Type.BidAsk> bids_ = new pbc::RepeatedField<global::Ssigmaapi.Type.BidAsk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssigmaapi.Type.BidAsk> Bids {
      get { return bids_; }
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Ssigmaapi.Type.BidAsk> _repeated_asks_codec
        = pb::FieldCodec.ForMessage(50, global::Ssigmaapi.Type.BidAsk.Parser);
    private readonly pbc::RepeatedField<global::Ssigmaapi.Type.BidAsk> asks_ = new pbc::RepeatedField<global::Ssigmaapi.Type.BidAsk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssigmaapi.Type.BidAsk> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exchange != other.Exchange) return false;
      if (Base != other.Base) return false;
      if (Quote != other.Quote) return false;
      if (Symbol != other.Symbol) return false;
      if(!bids_.Equals(other.bids_)) return false;
      if(!asks_.Equals(other.asks_)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (Base.Length != 0) hash ^= Base.GetHashCode();
      if (Quote.Length != 0) hash ^= Quote.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      hash ^= bids_.GetHashCode();
      hash ^= asks_.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Exchange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (Base.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Base);
      }
      if (Quote.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Quote);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      bids_.WriteTo(output, _repeated_bids_codec);
      asks_.WriteTo(output, _repeated_asks_codec);
      if (Timestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (Base.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Base);
      }
      if (Quote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quote);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      size += bids_.CalculateSize(_repeated_bids_codec);
      size += asks_.CalculateSize(_repeated_asks_codec);
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBook other) {
      if (other == null) {
        return;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.Base.Length != 0) {
        Base = other.Base;
      }
      if (other.Quote.Length != 0) {
        Quote = other.Quote;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      bids_.Add(other.bids_);
      asks_.Add(other.asks_);
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            Base = input.ReadString();
            break;
          }
          case 26: {
            Quote = input.ReadString();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 42: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
          case 50: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
